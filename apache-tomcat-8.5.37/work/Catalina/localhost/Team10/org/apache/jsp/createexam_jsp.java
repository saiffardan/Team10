/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-01-28 16:13:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mysql.jdbc.Driver;
import java.sql.Statement;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Connection;

public final class createexam_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("com.mysql.jdbc.Driver");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!Peter - this allows a java file to read html code >\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <link href=\"uploadcss.css\" rel=\"stylesheet\" type=\"text/css\"> \n");
      out.write("         <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\n");
      out.write("        <title>Create Exam</title>\n");
      out.write("        \n");
      out.write("        <nav class=\"navbar navbar-default\">\n");
      out.write("        <div class=\"container-fluid\">\n");
      out.write("          <div class=\"navbar-header\">\n");
      out.write("            <a href=\"dashboard.jsp\">\n");
      out.write("\t\t\t\t<img alt=\"Uni of Dundee crest\" src=\"Dundeebadge.png\" height=\"50\" width=\"50\"> \n");
      out.write("\t\t    </a>\n");
      out.write("          </div>\n");
      out.write("            <button type=\"button\" class=\"btn btn-default navbar-btn\"style=\"float:right\">Sign in</button>\n");
      out.write("        </div>\n");
      out.write("  \n");
      out.write("        </nav>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");

         
            // if(request.getParameter("comment") != null){
        if(request.getParameter("submit")!= null){
            try{
                
        String modulecode = request.getParameter("modulecode");   
        String moduletitle = request.getParameter("moduletitle"); 
        String author = request.getParameter("author"); 
        String year = request.getParameter("year");  
        String semester = request.getParameter("semester");
        String online = request.getParameter("online");
        String main = request.getParameter("main");
        
        
        
        Class.forName("com.mysql.jdbc.Driver").newInstance();   
       String connName = "jdbc:mysql://silva.computing.dundee.ac.uk:3306/18agileteam10db";
       Connection conn = DriverManager.getConnection(connName,"18agileteam10","7621.at10.1267");
       Statement st = conn.createStatement();
       st.executeUpdate("insert into accounts(email,username,password,role)values('"+email+"','"+username+"','"+password+"','"+role+"')");
       out.println("Succcessful");
       
       
        
            
            }catch(Exception e){
            out.println(e);
            }
            
            
        }
        
        
        
      out.write("\n");
      out.write("        \n");
      out.write("        <div class=container>\n");
      out.write("            <form class=\"form-signup\" action=\"CreateNewExam\" method=\"post\">\n");
      out.write("                    <h1 class=\"h3 mb-3 font-weight-normal\">Create New Exam</h1>\n");
      out.write("                    <label for=\"inputModuleCode\" class=\"sr-only\">Module Code</label>\n");
      out.write("                    \n");
      out.write("                    <input type=\"text\" id=\"inputModuleCode\" name=\"modulecode\" class=\"form-control\" placeholder=\"Module Code\" required autofocus>\n");
      out.write("                    \n");
      out.write("                    <label for=\"inputModuleTitle\" class=\"sr-only\">Module Title</label>\n");
      out.write("                    \n");
      out.write("                    <input type=\"text\" id=\"inputModuleTitle\" name=\"moduletitle\" class=\"form-control\" placeholder=\"Module Title\" required>\n");
      out.write("                    \n");
      out.write("                    <label for=\"inputAuthor\" class=\"sr-only\">Author</label>\n");
      out.write("                    \n");
      out.write("                    <input type=\"text\" id=\"inputAuthor\" name=\"author\" class=\"form-control\" placeholder=\"Author\" required>\n");
      out.write("                    \n");
      out.write("                    <label for=\"inputYear\" class=\"sr-only\">Academic Year</label>\n");
      out.write("                    \n");
      out.write("                    <input type=\"text\" id=\"inputYear\" name=\"year\" class=\"form-control\" placeholder=\"Academic Year\" required>\n");
      out.write("                    \n");
      out.write("                    <label for=\"inputSemester\" class=\"sr-only\">Semester</label>\n");
      out.write("                    \n");
      out.write("                    <select id=\"inputSemester\" name=\"semester\" class=\"form-control\" placeholder=\"Semester\" required>\n");
      out.write("                        \n");
      out.write("                            <option value=\"\" disabled selected>Semester</option>\n");
      out.write("                            <option>First</option>\n");
      out.write("                            <option>Second</option>\n");
      out.write("                    </select>\n");
      out.write("                    <label for=\"inputOnline\" class=\"sr-only\">Online or Paper</label>\n");
      out.write("                    <select id=\"inputOnline\" name=\"online\" class=\"form-control\" placeholder=\"Online or Paper\" required>\n");
      out.write("                            <option value=\"\" disabled selected>Online or Paper</option>\n");
      out.write("                            <option>Online</option>\n");
      out.write("                            <option>Paper</option>\n");
      out.write("                    </select>\n");
      out.write("                    <select id=\"inputMain\" name=\"main\" class=\"form-control\" placeholder=\"Main or Resit\" required>\n");
      out.write("                            <option value=\"\" disabled selected>Main or Resit</option>\n");
      out.write("                            <option>Main</option>\n");
      out.write("                            <option>Resit</option>\n");
      out.write("                    </select>\n");
      out.write("                    <select id=\"inputUndergrad\" name=\"undergrad\" class=\"form-control\" placeholder=\"Undergraduate or Postgraduate\" required>\n");
      out.write("                            <option value=\"\" disabled selected>Undergraduate or Postgraduate</option>\n");
      out.write("                            <option>Undergraduate</option>\n");
      out.write("                            <option>Postgraduate</option>\n");
      out.write("                    </select>\n");
      out.write("                    </div>\n");
      out.write("                    <div class= \"upload\">\n");
      out.write("                    <button type=\"button\" class=\"btn btn-lg btn-primary\">Upload</button>\n");
      out.write("\t\t\t\t\t<button class=\"btn btn-lg btn-primary\" type=\"submit\" name=\"submit\">Create</button>\n");
      out.write("                    </div>\n");
      out.write("                    \n");
      out.write("                    \n");
      out.write("                    \n");
      out.write("            </form>\n");
      out.write("\t  <br>\n");
      out.write("\n");
      out.write("        <div class = \"historybox\">\n");
      out.write("        <br>\n");
      out.write("        <br> <br>\n");
      out.write("        <br> <br>\n");
      out.write("        Exam Deadlines:\n");
      out.write("        <br>\n");
      out.write("        22/1/19, Agile software: NOT UPLOADED\n");
      out.write("        <br>\n");
      out.write("        29/3/19, Games programming: UPLOADED\n");
      out.write("        <br>\n");
      out.write("        9/9/19, Multi Paradigm: UPLOADED\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
